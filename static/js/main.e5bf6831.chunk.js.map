{"version":3,"sources":["components/Header/Header.js","components/SearchBox/SearchBox.js","components/MovieItem/MovieItem.js","components/Movies/Movies.js","components/Favorites/Favorites.js","pages/MainPage/MainPage.js","pages/ListPage/ListPage.js","App.js","redux/favoriteMovies/favoriteReducer.js","redux/movies/movieReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["Header","className","SearchBox","dispatch","useDispatch","useState","searchLine","setsearchLine","onSubmit","e","preventDefault","fetch","then","res","json","data","type","payload","Search","value","placeholder","onChange","target","disabled","MovieItem","Title","Year","Poster","imdbID","src","alt","onClick","Movies","movies","useSelector","store","movieReducer","map","movie","key","Favorites","favoriteMovies","favoriteReducer","title","movieListName","saveBtn","setsaveBtn","isClicked","setisClicked","enabled","length","item","to","setTimeout","MainPage","ListPage","listName","rel","href","App","path","exact","component","initialState","state","action","checkMovie","find","filter","rootReducer","combineReducers","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5bf6831.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header__title\">MustSee</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./SearchBox.css\";\r\nconst SearchBox = () => {\r\n  const dispatch = useDispatch();\r\n  const [searchLine, setsearchLine] = useState(\"\");\r\n  const searchLineChangeHandler = (e) => {\r\n    setsearchLine(e.target.value);\r\n  };\r\n\r\n  const searchBoxSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    fetch(`https://www.omdbapi.com/?s=${searchLine}&apikey=eba96b27`)\r\n      .then((res) => res.json())\r\n      .then((data) =>\r\n        dispatch({\r\n          type: \"FETCH_MOVIE\",\r\n          payload: data.Search,\r\n        })\r\n      );\r\n    setsearchLine(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-box\">\r\n      <form className=\"search-box__form\" onSubmit={searchBoxSubmitHandler}>\r\n        <label className=\"search-box__form-label\">\r\n          Искать фильм по названию:\r\n          <input\r\n            value={searchLine}\r\n            type=\"text\"\r\n            className=\"search-box__form-input\"\r\n            placeholder=\"Например, Shawshank Redemption\"\r\n            onChange={searchLineChangeHandler}\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"search-box__form-submit\"\r\n          disabled={!searchLine}\r\n        >\r\n          Искать\r\n        </button>\r\n        {searchLine}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./MovieItem.css\";\r\n\r\nconst MovieItem = ({ Title, Year, Poster, imdbID }) => {\r\n  if (Poster === \"N/A\") {\r\n    Poster =\r\n      \"https://scontent.fgyd8-1.fna.fbcdn.net/v/t1.6435-9/128851635_5427040923980029_649285277980215436_n.png?_nc_cat=102&ccb=1-7&_nc_sid=09cbfe&_nc_ohc=_ylmF0Ob5A0AX9Bf5-F&_nc_ht=scontent.fgyd8-1.fna&oh=00_AfA8P7zs77hMRsjbeqY2rhECJawKOO5Z-CuOwxEj18XbkQ&oe=64294145\";\r\n  }\r\n  const dispatch = useDispatch();\r\n  const addToFavorites = () => {\r\n    dispatch({\r\n      type: \"ADD_FAVORITES\",\r\n      payload: { Title, Year, imdbID },\r\n    });\r\n  };\r\n  return (\r\n    <article className=\"movie-item\">\r\n      <img className=\"movie-item__poster\" src={Poster} alt={Title} />\r\n      <div className=\"movie-item__info\">\r\n        <h3 className=\"movie-item__title\">\r\n          {Title}&nbsp;({Year})\r\n        </h3>\r\n        <button\r\n          onClick={addToFavorites}\r\n          type=\"button\"\r\n          className=\"movie-item__add-button\"\r\n        >\r\n          Добавить в список\r\n        </button>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MovieItem from \"../MovieItem/MovieItem\";\r\nimport \"./Movies.css\";\r\nconst Movies = () => {\r\n  const movies = useSelector((store) => store.movieReducer.movies);\r\n\r\n  return (\r\n    <ul className=\"movies\">\r\n      {movies &&\r\n        movies?.map((movie) => (\r\n          <li className=\"movies__item\" key={movie.imdbID}>\r\n            <MovieItem movie={movie} />\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Favorites.css\";\r\nconst Favorites = () => {\r\n  const dispatch = useDispatch();\r\n  const favoriteMovies = useSelector((store) => store.favoriteReducer.movies);\r\n  const title = useSelector((store) => store.favoriteReducer.movieListName);\r\n  const [saveBtn, setsaveBtn] = useState(\"Сохранить список\");\r\n  const [isClicked, setisClicked] = useState(false);\r\n  const deleteFavorite = (movie) => {\r\n    dispatch({\r\n      type: \"DELETE_FAVORITE_ITEM\",\r\n      payload: movie,\r\n    });\r\n  };\r\n  const createFavoriteList = () => {\r\n    setsaveBtn(\"loading...\");\r\n    setTimeout(() => {\r\n      setisClicked(true);\r\n    }, 300);\r\n  };\r\n  const undoFunc=()=>{\r\n    setsaveBtn(\"Сохранить список\");\r\n    setisClicked(false)\r\n  }\r\n  const enabled = title && favoriteMovies.length > 0;\r\n\r\n  return (\r\n    <div className=\"favorites\">\r\n      <input\r\n        value={title}\r\n        className=\"favorites__name\"\r\n        onChange={(e) =>\r\n          dispatch({ type: \"LIST_NAME\", payload: e.target.value })\r\n        }\r\n        placeholder=\"Новый список\"\r\n        disabled={isClicked}\r\n      />\r\n      {favoriteMovies.length > 0 && (\r\n        <ul className=\"favorites__list\">\r\n          {favoriteMovies?.map((item) => {\r\n            return (\r\n              <li key={item.imdbID}>\r\n                {item.Title} ({item.Year})\r\n                <button\r\n                  onClick={() => deleteFavorite(item)}\r\n                  disabled={isClicked}\r\n                >\r\n                  X\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n      {!isClicked ? (\r\n        <button\r\n          type=\"button\"\r\n          onClick={createFavoriteList}\r\n          className=\"favorites__save\"\r\n          disabled={!enabled}\r\n        >\r\n          {saveBtn}\r\n        </button>\r\n      ) : (\r\n       <>\r\n         <Link to=\"/listpage\">Перейти к списку</Link>\r\n         <button onClick={undoFunc}>Undo</button>\r\n       </>\r\n\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport \"./MainPage.css\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport SearchBox from \"../../components/SearchBox/SearchBox\";\r\nimport Movies from \"../../components/Movies/Movies\";\r\nimport Favorites from \"../../components/Favorites/Favorites\";\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <div className=\"main-page\">\r\n      <Header />\r\n      <main className=\"main-page__content\">\r\n        <section className=\"main-page__main-section\">\r\n          <div className=\"main-page__search-box\">\r\n            <SearchBox />\r\n          </div>\r\n          <div className=\"main-page__movies\">\r\n            <Movies />\r\n          </div>\r\n        </section>\r\n        <aside className=\"main-page__favorites\">\r\n          <Favorites />\r\n        </aside>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./ListPage.css\";\r\n\r\nconst ListPage = () => {\r\n  const movies = useSelector((store) => store.favoriteReducer.movies);\r\n  const listName = useSelector((store) => store.favoriteReducer.movieListName);\r\n  return (\r\n    <div className=\"list-page\">\r\n      <h1 className=\"list-page__title\">{listName}</h1>\r\n      <ul>\r\n        {movies.map((item) => {\r\n          return (\r\n            <li key={item.imdbID}>\r\n              <a\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                href={`https://www.imdb.com/title/${item.imdbID}/`}\r\n              >\r\n                {item.Title} ({item.Year})\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Link to=\"/\">Back to Home Page</Link>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListPage;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport MainPage from \"./pages/MainPage/MainPage\";\r\nimport ListPage from \"./pages/ListPage/ListPage\";\r\n\r\nimport \"./reset.css\";\r\nimport \"./common.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <Route path=\"/\" exact component={MainPage} />\r\n      <Route path=\"/listpage\" exact component={ListPage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const initialState = {\r\n  movies: [],\r\n  movieListName: \"\",\r\n};\r\nconst favoriteReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_FAVORITES\":\r\n      const checkMovie = state.movies.find(\r\n        (movie) => movie.imdbID === action.payload.imdbID\r\n      );\r\n      if (checkMovie) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          movies: [...state.movies, action.payload],\r\n        };\r\n      }\r\n    case \"DELETE_FAVORITE_ITEM\":\r\n      return {\r\n        ...state,\r\n        movies: state.movies.filter(\r\n          (movie) => movie.imdbID !== action.payload.imdbID\r\n        ),\r\n      };\r\n    case \"LIST_NAME\":\r\n      return {\r\n        ...state,\r\n        movieListName: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default favoriteReducer;\r\n","const initialState = {\r\n  movies: [],\r\n};\r\nconst movieReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_MOVIE\":\r\n      return {\r\n        ...state,\r\n        movies: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default movieReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport favoriteReducer from \"./favoriteMovies/favoriteReducer\";\r\nimport movieReducer from \"./movies/movieReducer\";\r\nconst rootReducer = combineReducers({ movieReducer, favoriteReducer });\r\n\r\nexport default rootReducer;\r\n\r\n//\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}